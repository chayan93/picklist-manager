/**
 * @description       : Static mapping of standard value Sets
 * @author            : chayan.batabyal@neuraflash.com
 * @last modified on  : 08-31-2022
 * @last modified by  : chayan.batabyal@neuraflash.com
**/
public class StandardValueSet {
    public static Map<String, String> getObjectAndFieldToStandardValueSetMapping(){
        return new Map<String, String>{
            'AccountContactRelation.Roles' => 'AccountContactMultiRoles',
            'AccountContactRole.Role' => 'AccountContactRole',
            'Account.Ownership' => 'AccountOwnership',
            'Account.Rating' => 'AccountRating',
            'Lead.Rating' => 'AccountRating',
            'Account.Type' => 'AccountType',
            'AssetAction.Category' => 'AssetActionCategory',
            'AssetRelationship.RelationshipType' => 'AssetRelationshipType',
            'Asset.Status' => 'AssetStatus',
            'AssociatedLocation.Type' => 'AssociatedLocationType',
            'CampaignMember.Status' => 'CampaignMemberStatus',
            'Campaign.Status' => 'CampaignStatus',
            'Campaign.Type' => 'CampaignType',
            'CardPaymentMethod.CardType' => 'CardType',
            'CareItem.Status1' => 'CareItemStatus1',
            'CaseContactRole.Role' => 'CaseContactRole',
            'Case.Origin' => 'CaseOrigin',
            'Case.Priority' => 'CasePriority',
            'Case.Reason' => 'CaseReason',
            'Case.Status' => 'CaseStatus',
            'Case.Type' => 'CaseType',
            'ChangeRequestRelatedItem.ImpactLevel' => 'ChangeRequestRelatedItemImpactLevel',
            'ChangeRequest.BusinessReason' => 'ChangeRequestBusinessReason',
            'ChangeRequest.Category' => 'ChangeRequestCategory',
            'ChangeRequest.Impact' => 'ChangeRequestImpact',
            'ChangeRequest.Priority' => 'ChangeRequestPriority',
            'ChangeRequest.RiskLevel' => 'ChangeRequestRiskLevel',
            'ChangeRequest.Status' => 'ChangeRequestStatus',
            'ContactPointAddress.AddressType' => 'ContactPointAddressType',
            'ContactPointAddress.UsageType' => 'ContactPointUsageType',
            'ContactRequest.RequestReason' => 'ContactRequestReason',
            'ContactRequest.Status' => 'ContactRequestStatus',
            'OpportunityContactRole.Role' => 'ContactRole',
            'ContractContactRole.Role' => 'ContractContactRole',
            'Contract.Status' => 'ContractStatus',
            'Asset.ConsequenceOfFailure' => 'ConsequenceOfFailure',
            'Asset.DigitalAssetStatus' => 'DigitalAssetStatus',
            'Entitlement.Type' => 'EntitlementType',
            'Event.Subject' => 'EventSubject',
            'Event.Type' => 'EventType',
            'FinanceTransaction.EventAction' => 'FinanceEventAction',
            'FinanceBalanceSnapshot.EventType' => 'FinanceEventType',
            'FinanceTransaction.EventType' => 'FinanceEventType',
            'Period.PeriodLabel' => 'FiscalYearPeriodName',
            'FiscalYearSettings.PeriodPrefix' => 'FiscalYearPeriodPrefix',
            'Period.QuarterLabel' => 'FiscalYearQuarterName',
            'FiscalYearSettings.QuarterPrefix' => 'FiscalYearQuarterPrefix',
            'FulfillmentOrder.Status' => 'FulfillmentStatus',
            'FulfillmentOrder.Type' => 'FulfillmentType',
            'IdeaTheme.Categories' => 'IdeaCategory',
            'Idea.Categories' => 'IdeaMultiCategory',
            'Idea.Status' => 'IdeaStatus',
            'IdeaTheme.Status' => 'IdeaThemeStatus',
            'Incident.Category' => 'IncidentCategory',
            'Incident.Impact' => 'IncidentImpact',
            'Incident.Priority' => 'IncidentPriority',
            'IncidentRelatedItem.ImpactLevel' => 'IncidentRelatedItemImpactLevel',
            'IncidentRelatedItem.ImpactType' => 'IncidentRelatedItemImpactType',
            'Incident.ReportedMethod' => 'IncidentReportedMethod',
            'Incident.Status' => 'IncidentStatus',
            'Incident.SubCategory' => 'IncidentSubCategory',
            'Incident.Type' => 'IncidentType',
            'Incident.Urgency' => 'IncidentUrgency',
            'Account.Industry' => 'Industry',
            'Lead.Industry' => 'Industry',
            'Account.AccountSource' => 'LeadSource',
            'Contact.LeadSource' => 'LeadSource',
            'Lead.LeadSource' => 'LeadSource',
            'Opportunity.LeadSource' => 'LeadSource',
            'Lead.Status' => 'LeadStatus',
            'Location.LocationType' => 'LocationType',
            'Individual.MilitaryService' => 'MilitaryService',
            'OpportunityCompetitor.CompetitorName' => 'OpportunityCompetitor',
            'Opportunity.StageName' => 'OpportunityStage',
            'Opportunity.Type' => 'OpportunityType',
            'OrderItemSummaryChange.Reason' => 'OrderItemSummaryChgRsn',
            'Order.Status' => 'OrderStatus',
            'OrderSummaryRoutingSchedule.Reason' => 'OrderSummaryRoutingSchdRsn',
            'OrderSummary.Status' => 'OrderSummaryStatus',
            'Order.Type' => 'OrderType',
            'Account.PartnerRole' => 'PartnerRole',
            'Problem.Category' => 'ProblemCategory',
            'Problem.Impact' => 'ProblemImpact',
            'Problem.Priority' => 'ProblemPriority',
            'ProblemRelatedItem.ImpactLevel' => 'ProblemRelatedItemImpactLevel',
            'ProblemRelatedItem.ImpactType' => 'ProblemRelatedItemImpactType',
            'Problem.Status' => 'ProblemStatus',
            'Problem.SubCategory' => 'ProblemSubCategory',
            'Problem.Urgency' => 'ProblemUrgency',
            'ProcessException.Category' => 'ProcessExceptionCategory',
            'ProcessException.Priority' => 'ProcessExceptionPriority',
            'ProcessException.Severity' => 'ProcessExceptionSeverity',
            'ProcessException.Status' => 'ProcessExceptionStatus',
            'Product2.Family' => 'Product2Family',
            'Product2.QuantityUnitOfMeasure' => 'QuantityUnitOfMeasure',
            'ReturnOrderLineItem.QuantityUnitOfMeasure' => 'QuantityUnitOfMeasure',
            'QuickText.Category' => 'QuickTextCategory',
            'QuickText.Channel' => 'QuickTextChannel',
            'Quote.Status' => 'QuoteStatus',
            'UserTerritory2Association.RoleInTerritory2' => 'RoleInTerritory2',
            'ResourceAbsence.Type' => 'ResourceAbsenceType',
            'ReturnOrderLineItem.ProcessingPlan' => 'ReturnOrderLineItemProcessPlan',
            'ReturnOrderLineItem.ReasonForRejection' => 'ReturnOrderLineItemReasonForRejection',
            'ReturnOrderLineItem.ReasonForReturn' => 'ReturnOrderLineItemReasonForReturn',
            'ReturnOrderLineItem.RepaymentMethod' => 'ReturnOrderLineItemRepaymentMethod',
            'ReturnOrder.ShipmentType' => 'ReturnOrderShipmentType',
            'ReturnOrder.Status' => 'ReturnOrderStatus',
            'OpportunityTeamMember.TeamMemberRole' => 'SalesTeamRole',
            'UserAccountTeamMember.TeamMemberRole' => 'SalesTeamRole',
            'UserTeamMember.TeamMemberRole' => 'SalesTeamRole',
            'AccountTeamMember.TeamMemberRole' => 'SalesTeamRole',
            'Contact.Salutation' => 'Salutation',
            'Lead.Salutation' => 'Salutation',
            'ScorecardMetric.Category' => 'ScorecardMetricCategory',
            'ServiceAppointment.Status' => 'ServiceAppointmentStatus',
            'ServiceContract.ApprovalStatus' => 'ServiceContractApprovalStatus',
            'ServiceTerritoryMember.Role' => 'ServTerrMemRoleType',
            'Shift.Status' => 'ShiftStatus',
            'SocialPost.Classification' => 'SocialPostClassification',
            'SocialPost.EngagementLevel' => 'SocialPostEngagementLevel',
            'SocialPost.ReviewedStatus' => 'SocialPostReviewedStatus',
            'Solution.Status' => 'SolutionStatus',
            'Asset.StatusReason' => 'StatusReason',
            'Task.Priority' => 'TaskPriority',
            'Task.Status' => 'TaskStatus',
            'Task.Subject' => 'TaskSubject',
            'Task.Type' => 'TaskType',
            'ConsumptionSchedule.UnitOfMeasure' => 'UnitOfMeasure',
            'WorkOrderLineItem.Priority' => 'WorkOrderLineItemPriority',
            'WorkOrderLineItem.Status' => 'WorkOrderLineItemStatus',
            'WorkOrder.Priority' => 'WorkOrderPriority',
            'WorkOrder.Status' => 'WorkOrderStatus',
            'WorkStep.Status' => 'WorkStepStatus',
            'ServiceAppointment.AppointmentType' => 'WorkTypeDefApptType',
            'WorkTypeGroup.AdditionalInformation' => 'WorkTypeGroupAddInfo'
        };
    }

    public static Map<String, List<String>> getStandardValueSetToMultipleObjectMapping(){
        return new Map<String, List<String>>{
            'AccountRating' => new List<String>{'Account', 'Lead'},
            'FinanceEventType' => new List<String>{'FinanceBalanceSnapshot', 'FinanceTransaction'},
            'Industry' => new List<String>{'Account', 'Lead'},
            'LeadSource' => new List<String>{'Account', 'Contact', 'Lead', 'Opportunity'},
            'QuantityUnitOfMeasure' => new List<String>{'Product2', 'ReturnOrderLineItem'},
            'Salutation' => new List<String>{'Contact', 'Lead'}
        };
    }
}